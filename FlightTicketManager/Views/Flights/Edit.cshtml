@model FlightTicketManager.Models.FlightViewModel

@{
    ViewData["Title"] = "Edit Flight";
    var minDate = DateTime.UtcNow;
}

<h1 class="text-center">@ViewData["Title"]</h1>

<div class="card-container">
    <div class="card">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="TicketsList" />

            <div class="form-group">
                <label asp-for="FlightNumber" class="control-label"></label>
                <input asp-for="FlightNumber" class="form-control" disabled />
            </div>

            <div class="form-group">
                <label asp-for="DepartureDateTime" class="control-label"></label>
                <ejs-datetimepicker name="DepartureDateTime" id="datetimepicker" min="@minDate" value="@Model.DepartureDateTime" format="dd/MM/yyyy HH:mm" placeholder="Select the date and time"></ejs-datetimepicker>
                <span asp-validation-for="DepartureDateTime" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="FlightDuration" class="control-label"></label>
                <input asp-for="FlightDuration" class="form-control" />
                <span asp-validation-for="FlightDuration" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="SelectedOrigin" class="control-label"></label>
                <select asp-for="SelectedOrigin" id="SelectedOrigin" asp-items="Model.Cities" class="form-control" readonly>
                    <option value="">-- Select origin --</option>
                </select>
                <span asp-validation-for="SelectedOrigin" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="SelectedOriginAirport"></label>
                <select asp-for="SelectedOriginAirport" id="OriginAirports" class="form-control">
                    <option value="">-- Select origin airport --</option>
                </select>
                <span asp-validation-for="SelectedOriginAirport" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="SelectedDestination" class="control-label"></label>
                <select asp-for="SelectedDestination" id="SelectedDestination" asp-items="Model.Cities" class="form-control" readonly>
                    <option value="">-- Select destination --</option>
                </select>
                <span asp-validation-for="SelectedDestination" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="SelectedDestinationAirport"></label>
                <select asp-for="SelectedDestinationAirport" id="DestinationAirports" class="form-control">
                    <option value="">-- Select destination airport --</option>
                </select>
                <span asp-validation-for="SelectedDestinationAirport" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="SelectedAircraft" class="control-label"></label>
                <select asp-for="SelectedAircraft" asp-items="Model.Aircrafts" class="form-control">
                    <option value="">-- Select aircraft --</option>
                </select>
                <span asp-validation-for="SelectedAircraft" class="text-danger"></span>
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-success" style="width: auto">
                    <i class="fa-solid fa-floppy-disk"></i> Save
                </button>
                <a asp-action="Index" class="btn btn-secondary" style="width: auto">
                    <i class="fa-solid fa-arrow-left"></i> Cancel
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var originSelect = document.getElementById('SelectedOrigin');
        var destinationSelect = document.getElementById('SelectedDestination');

        function updateOptions() {
            var origin = originSelect.value;
            var destination = destinationSelect.value;

            for (var i = 0; i < destinationSelect.options.length; i++) {
                var option = destinationSelect.options[i];
                if (option.value === origin) {
                    option.disabled = true;
                } else {
                    option.disabled = false;
                }
            }

            for (var i = 0; i < originSelect.options.length; i++) {
                var option = originSelect.options[i];
                if (option.value === destination) {
                    option.disabled = true;
                } else {
                    option.disabled = false;
                }
            }
        }

        originSelect.addEventListener('change', updateOptions);
        destinationSelect.addEventListener('change', updateOptions);
        updateOptions();

        // Pre-load airports when the page loads
        loadOriginAirports(originSelect.value);
        loadDestinationAirports(destinationSelect.value);

        function loadOriginAirports(cityId) {
            if (cityId) {
                $.get('/Flights/GetOriginAirports', { cityId: cityId }, function (data) {
                    if (data.success) {
                        var $airportsDropdown = $('#OriginAirports');
                        $airportsDropdown.empty();

                        $.each(data.airports, function (i, airport) {
                            $airportsDropdown.append($('<option>', {
                                value: airport.value,
                                text: airport.text
                            }));
                        });

                        // Pre-select the airport 
                        var selectedOriginAirport = '@Model.SelectedOriginAirport';
                        if (selectedOriginAirport) {
                            $airportsDropdown.val(selectedOriginAirport);
                        }
                    } else {
                        alert(data.message);
                    }
                });
            }
        }

        function loadDestinationAirports(cityId) {
            if (cityId) {
                $.get('/Flights/GetDestinationAirports', { cityId: cityId }, function (data) {
                    if (data.success) {
                        var $airportsDropdown = $('#DestinationAirports');
                        $airportsDropdown.empty();

                        $.each(data.airports, function (i, airport) {
                            $airportsDropdown.append($('<option>', {
                                value: airport.value,
                                text: airport.text
                            }));
                        });
                        // Pre-select the airport 
                        var selectedDestinationAirport = '@Model.SelectedDestinationAirport'; 
                        if (selectedDestinationAirport) {
                            $airportsDropdown.val(selectedDestinationAirport);
                        }
                    } else {
                        alert(data.message);
                    }
                });
            }
        }
    });
</script>

<script>
    $('#SelectedOrigin').change(function () {
        var cityId = $(this).val();
        $.get('/Flights/GetOriginAirports', { cityId: cityId }, function (data) {
            console.log(data);
            if (data.success) {
                var $airportsDropdown = $('#OriginAirports');
                $airportsDropdown.empty();

                $.each(data.airports, function (i, airport) {
                    $airportsDropdown.append($('<option>', {
                        value: airport.value,
                        text: airport.text
                    }));
                });
                
            } else {
                alert(data.message);
            }
        });
    });

    $('#SelectedDestination').change(function () {
        var cityId = $(this).val();
        $.get('/Flights/GetDestinationAirports', { cityId: cityId }, function (data) {
            console.log(data);
            if (data.success) {
                var $airportsDropdown = $('#DestinationAirports');
                $airportsDropdown.empty();

                $.each(data.airports, function (i, airport) {
                    $airportsDropdown.append($('<option>', {
                        value: airport.value,
                        text: airport.text
                    }));
                });
                console.log($airportsDropdown.html());
            } else {
                alert(data.message);
            }
        });
    });
</script>